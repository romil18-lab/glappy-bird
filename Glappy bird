<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Glappy Bird</title>
  <style>
    * { margin: 0; padding: 0; box-sizing: border-box; }
    body {
      background: #70c5ce;
      overflow: hidden;
      font-family: sans-serif;
      text-align: center;
    }
    canvas {
      display: block;
      margin: auto;
      background: #70c5ce;
    }
    #score, #highScore {
      position: absolute;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      font-size: 28px;
      color: white;
      text-shadow: 1px 1px 4px black;
    }
    #menu, #game-over {
      position: absolute;
      top: 30%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.7);
      padding: 30px;
      color: white;
      border-radius: 10px;
      display: none;
    }
    button {
      margin-top: 10px;
      padding: 12px 24px;
      font-size: 18px;
      border: none;
      border-radius: 6px;
      background: #ffd700;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div id="score">Score: 0</div>
  <div id="highScore">High Score: 0</div>
  <canvas id="gameCanvas" width="400" height="600"></canvas>

  <div id="menu">
    <h2>Welcome to Glappy Bird</h2>
    <button id="startBtn">Start Game</button>
  </div>

  <div id="game-over">
    <p>Game Over</p>
    <button id="restart">Restart</button>
  </div>

  <!-- Audio -->
  <audio id="flapSound" src="https://www.soundjay.com/button/beep-07.wav" preload="auto"></audio>
  <audio id="pointSound" src="https://www.soundjay.com/button/button-3.wav" preload="auto"></audio>
  <audio id="hitSound" src="https://www.soundjay.com/button/button-4.wav" preload="auto"></audio>

  <!-- Optional: Your Ad Code -->
  <!-- <script type='text/javascript' src='//pl27039097.profitableratecpm.com/10/bc/5b/10bc5b84f1846ccad94f6f5212aa4608.js'></script> -->

  <script>
    const canvas = document.getElementById("gameCanvas");
    const ctx = canvas.getContext("2d");
    const flapSound = document.getElementById("flapSound");
    const pointSound = document.getElementById("pointSound");
    const hitSound = document.getElementById("hitSound");

    const birdImg = new Image();
    birdImg.src = "https://i.imgur.com/sf1A3Fi.png"; // bird icon

    let bird, pipes, frame, score, highScore, gameOver;

    const GRAVITY = 0.6, LIFT = -12;

    const resetGame = () => {
      bird = { x: 50, y: 150, width: 34, height: 24, velocity: 0 };
      pipes = [];
      frame = 0;
      score = 0;
      gameOver = false;
      document.getElementById("game-over").style.display = "none";
      document.getElementById("score").innerText = "Score: 0";
      loop();
    };

    const endGame = () => {
      gameOver = true;
      hitSound.play();
      document.getElementById("game-over").style.display = "block";
      if (score > highScore) {
        localStorage.setItem("highScore", score);
        highScore = score;
        document.getElementById("highScore").innerText = "High Score: " + highScore;
      }
    };

    const flap = () => {
      if (!gameOver) {
        bird.velocity = LIFT;
        flapSound.play();
      }
    };

    const drawBird = () => {
      ctx.drawImage(birdImg, bird.x, bird.y, bird.width, bird.height);
    };

    const drawPipes = () => {
      ctx.fillStyle = "green";
      for (let pipe of pipes) {
        ctx.fillRect(pipe.x, 0, pipe.width, pipe.top);
        ctx.fillRect(pipe.x, pipe.bottom, pipe.width, canvas.height - pipe.bottom);
      }
    };

    const updatePipes = () => {
      if (frame % 90 === 0) {
        let top = Math.random() * 200 + 50;
        let gap = 130;
        pipes.push({
          x: canvas.width,
          width: 50,
          top: top,
          bottom: top + gap,
        });
      }

      for (let i = pipes.length - 1; i >= 0; i--) {
        let pipe = pipes[i];
        pipe.x -= 2;

        // Collision detection
        if (
          bird.x + bird.width > pipe.x &&
          bird.x < pipe.x + pipe.width &&
          (bird.y < pipe.top || bird.y + bird.height > pipe.bottom)
        ) {
          endGame();
        }

        // Scoring
        if (pipe.x + pipe.width === bird.x) {
          score++;
          pointSound.play();
          document.getElementById("score").innerText = "Score: " + score;
        }

        if (pipe.x + pipe.width < 0) pipes.splice(i, 1);
      }
    };

    const draw = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawBird();
      drawPipes();
    };

    const update = () => {
      bird.velocity += GRAVITY;
      bird.y += bird.velocity;

      if (bird.y + bird.height > canvas.height || bird.y < 0) {
        endGame();
      }

      updatePipes();
    };

    const loop = () => {
      if (!gameOver) {
        update();
        draw();
        frame++;
        requestAnimationFrame(loop);
      }
    };

    // Controls
    document.addEventListener("keydown", e => {
      if (e.code === "Space") flap();
    });
    document.addEventListener("touchstart", flap);

    document.getElementById("restart").addEventListener("click", resetGame);
    document.getElementById("startBtn").addEventListener("click", () => {
      document.getElementById("menu").style.display = "none";
      resetGame();
    });

    // On load
    highScore = localStorage.getItem("highScore") || 0;
    document.getElementById("highScore").innerText = "High Score: " + highScore;
    document.getElementById("menu").style.display = "block";
  </script>
</body>
</html>
